package ui

import "github.com/tinkerbell/tinkerbell/api/v1alpha1/tinkerbell"

templ TemplateDetailPage(tmpl tinkerbell.Template) {
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tinkerbell UI - Template Details</title>
    <link href="/static/simple.css" rel="stylesheet">
    <script src="/static/htmx.min.js"></script>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <h1 class="text-xl font-semibold text-gray-900">Tinkerbell</h1>
                    <div class="ml-6 flex space-x-8">
                        <a href="/hardware" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">Hardware</a>
                        <a href="/templates" class="border-blue-500 text-blue-600 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">Templates</a>
                        <a href="/workflows" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">Workflows</a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
            <!-- Header -->
            <div class="flex justify-between items-center mb-6">
                <div class="flex items-center">
                    <a href="/templates" class="text-gray-500 hover:text-gray-700 mr-4">
                        <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                        </svg>
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">Template: {tmpl.Name}</h1>
                </div>
                <div class="flex space-x-3">
                    <button 
                        type="button"
                        onclick="document.getElementById('edit-modal').style.display='block'"
                        class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Edit
                    </button>
                    <button 
                        type="button"
                        onclick="document.getElementById('delete-modal').style.display='block'"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700">
                        Delete
                    </button>
                </div>
            </div>

            <!-- Template details -->
            <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
                <div class="px-4 py-5 sm:px-6">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Template Information</h3>
                    <p class="mt-1 max-w-2xl text-sm text-gray-500">Details and metadata for this template.</p>
                </div>
                <div class="border-t border-gray-200">
                    <dl>
                        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Name</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{tmpl.Name}</dd>
                        </div>
                        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Namespace</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{tmpl.Namespace}</dd>
                        </div>
                        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">State</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                if tmpl.Status.State == tinkerbell.TemplateReady {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Ready</span>
                                } else if tmpl.Status.State == tinkerbell.TemplateError {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">Error</span>
                                } else {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">Unknown</span>
                                }
                            </dd>
                        </div>
                        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Created</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                if !tmpl.CreationTimestamp.IsZero() {
                                    {tmpl.CreationTimestamp.Format("2006-01-02 15:04:05")}
                                } else {
                                    Unknown
                                }
                            </dd>
                        </div>
                        if len(tmpl.Labels) > 0 {
                            <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                                <dt class="text-sm font-medium text-gray-500">Labels</dt>
                                <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                    <div class="flex flex-wrap gap-2">
                                        for key, value := range tmpl.Labels {
                                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 text-blue-800">
                                                {key}: {value}
                                            </span>
                                        }
                                    </div>
                                </dd>
                            </div>
                        }
                    </dl>
                </div>
            </div>

            <!-- Template data -->
            if tmpl.Spec.Data != nil {
                <div class="bg-white shadow overflow-hidden sm:rounded-lg">
                    <div class="px-4 py-5 sm:px-6">
                        <h3 class="text-lg leading-6 font-medium text-gray-900">Template Data</h3>
                        <p class="mt-1 max-w-2xl text-sm text-gray-500">The template data content.</p>
                    </div>
                    <div class="border-t border-gray-200">
                        <div class="px-4 py-5 sm:px-6">
                            <pre class="bg-gray-50 p-4 rounded-md text-sm text-gray-800 whitespace-pre-wrap overflow-x-auto">{*tmpl.Spec.Data}</pre>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="edit-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900">Edit Template</h3>
                <button type="button" onclick="document.getElementById('edit-modal').style.display='none'" class="text-gray-400 hover:text-gray-600">
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                </button>
            </div>
            <form hx-put={"/templates/" + tmpl.Name} hx-target="body" hx-swap="outerHTML">
                <div class="mb-4">
                    <label for="edit-name" class="block text-sm font-medium text-gray-700">Name</label>
                    <input type="text" name="name" id="edit-name" value={tmpl.Name} class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                </div>
                <div class="mb-4">
                    <label for="edit-data" class="block text-sm font-medium text-gray-700">Template Data</label>
                    <textarea name="data" id="edit-data" rows="10" class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        if tmpl.Spec.Data != nil {
                            {*tmpl.Spec.Data}
                        }
                    </textarea>
                </div>
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="document.getElementById('edit-modal').style.display='none'" class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">Cancel</button>
                    <button type="submit" class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700">Update</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="delete-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900">Delete Template</h3>
                <button type="button" onclick="document.getElementById('delete-modal').style.display='none'" class="text-gray-400 hover:text-gray-600">
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                </button>
            </div>
            <div class="mb-4">
                <p class="text-sm text-gray-500">Are you sure you want to delete the template "{tmpl.Name}"? This action cannot be undone.</p>
            </div>
            <div class="flex justify-end space-x-3">
                <button type="button" onclick="document.getElementById('delete-modal').style.display='none'" class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">Cancel</button>
                <button 
                    type="button"
                    hx-delete={"/templates/" + tmpl.Name}
                    hx-confirm="Are you sure?"
                    hx-target="body"
                    hx-swap="outerHTML"
                    class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700">
                    Delete
                </button>
            </div>
        </div>
    </div>
</body>
</html>
}
