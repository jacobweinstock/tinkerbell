package ui

import (
    "fmt"
    "github.com/tinkerbell/tinkerbell/api/v1alpha1/tinkerbell"
)

templ HardwareDetailPage(hw tinkerbell.Hardware) {
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tinkerbell UI - Hardware Details</title>
    <link href="/static/simple.css" rel="stylesheet">
    <script src="/static/htmx.min.js"></script>
</head>
<body class="bg-gray-50 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <h1 class="text-xl font-semibold text-gray-900">Tinkerbell</h1>
                    <div class="ml-6 flex space-x-8">
                        <a href="/hardware" class="border-blue-500 text-blue-600 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">Hardware</a>
                        <a href="/templates" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">Templates</a>
                        <a href="/workflows" class="border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium">Workflows</a>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main content -->
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div class="px-4 py-6 sm:px-0">
            <!-- Header -->
            <div class="flex justify-between items-center mb-6">
                <div class="flex items-center">
                    <a href="/hardware" class="text-gray-500 hover:text-gray-700 mr-4">
                        <svg class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
                        </svg>
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">Hardware: {hw.Name}</h1>
                </div>
                <div class="flex space-x-3">
                    <button 
                        type="button"
                        onclick="document.getElementById('edit-modal').style.display='block'"
                        class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
                        Edit
                    </button>
                    <button 
                        type="button"
                        onclick="document.getElementById('delete-modal').style.display='block'"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700">
                        Delete
                    </button>
                </div>
            </div>

            <!-- Hardware details -->
            <div class="bg-white shadow overflow-hidden sm:rounded-lg">
                <div class="px-4 py-5 sm:px-6">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Hardware Information</h3>
                    <p class="mt-1 max-w-2xl text-sm text-gray-500">Details and specifications for this hardware device.</p>
                </div>
                <div class="border-t border-gray-200">
                    <dl>
                        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Name</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{hw.Name}</dd>
                        </div>
                        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Namespace</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{hw.Namespace}</dd>
                        </div>
                        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">State</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                if hw.Status.State == tinkerbell.HardwareReady {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Ready</span>
                                } else if hw.Status.State == tinkerbell.HardwareError {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">Error</span>
                                } else {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">Unknown</span>
                                }
                            </dd>
                        </div>
                        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                            <dt class="text-sm font-medium text-gray-500">Created</dt>
                            <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                if !hw.CreationTimestamp.IsZero() {
                                    {hw.CreationTimestamp.Format("2006-01-02 15:04:05")}
                                } else {
                                    Unknown
                                }
                            </dd>
                        </div>
                        if hw.Spec.BMCRef != nil {
                            <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                                <dt class="text-sm font-medium text-gray-500">BMC Reference</dt>
                                <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">{hw.Spec.BMCRef.Name}</dd>
                            </div>
                        }
                        if len(hw.Labels) > 0 {
                            <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
                                <dt class="text-sm font-medium text-gray-500">Labels</dt>
                                <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
                                    <div class="flex flex-wrap gap-2">
                                        for key, value := range hw.Labels {
                                            <span class="inline-flex items-center px-2 py-1 rounded-md text-xs font-medium bg-blue-100 text-blue-800">
                                                {key}: {value}
                                            </span>
                                        }
                                    </div>
                                </dd>
                            </div>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="edit-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center z-50">
        <div class="bg-white rounded-lg max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-center p-6 border-b">
                <h3 class="text-lg font-medium text-gray-900">Edit Hardware</h3>
                <button type="button" onclick="document.getElementById('edit-modal').style.display='none'" class="text-gray-400 hover:text-gray-600">
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                </button>
            </div>
            
            <form hx-put={"/hardware/" + hw.Name} hx-target="body" hx-swap="outerHTML" class="p-6 space-y-6">
                <!-- Basic Information Section -->
                <div class="border border-gray-200 rounded-lg p-4">
                    <h4 class="text-lg font-medium text-gray-900 mb-4">Basic Information</h4>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="edit-name" class="block text-sm font-medium text-gray-700">Name</label>
                            <input type="text" name="name" id="edit-name" value={hw.Name} 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="edit-tink-version" class="block text-sm font-medium text-gray-700">Tink Version</label>
                            <input type="number" name="tinkVersion" id="edit-tink-version" value={fmt.Sprintf("%d", hw.Spec.TinkVersion)}
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                    </div>
                    <div class="grid grid-cols-1 gap-4 mt-4">
                        <div>
                            <label for="edit-user-data" class="block text-sm font-medium text-gray-700">User Data</label>
                            <textarea name="userData" id="edit-user-data" rows="4" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                                placeholder="Enter user data..."></textarea>
                        </div>
                        <div>
                            <label for="edit-vendor-data" class="block text-sm font-medium text-gray-700">Vendor Data</label>
                            <textarea name="vendorData" id="edit-vendor-data" rows="4" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
                                placeholder="Enter vendor data..."></textarea>
                        </div>
                    </div>
                </div>

                <!-- BMC Reference Section -->
                <div class="border border-gray-200 rounded-lg p-4">
                    <h4 class="text-lg font-medium text-gray-900 mb-4">BMC Reference</h4>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div>
                            <label for="edit-bmc-name" class="block text-sm font-medium text-gray-700">BMC Name</label>
                            <input type="text" name="bmcName" id="edit-bmc-name" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="edit-bmc-kind" class="block text-sm font-medium text-gray-700">BMC Kind</label>
                            <input type="text" name="bmcKind" id="edit-bmc-kind" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="edit-bmc-apigroup" class="block text-sm font-medium text-gray-700">BMC API Group</label>
                            <input type="text" name="bmcAPIGroup" id="edit-bmc-apigroup" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                    </div>
                </div>

                <!-- Network Interfaces Section -->
                <div class="border border-gray-200 rounded-lg p-4">
                    <h4 class="text-lg font-medium text-gray-900 mb-4">Network Interfaces</h4>
                    <div id="interfaces-container">
                        for i, _ := range hw.Spec.Interfaces {
                            <div class="border border-gray-100 rounded p-3 mb-3">
                                <h5 class="text-sm font-medium text-gray-800 mb-2">Interface {fmt.Sprintf("%d", i+1)}</h5>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Netboot Enabled</label>
                                        <input type="checkbox" name={fmt.Sprintf("interfaces[%d].netboot", i)} class="mt-1">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">DHCP MAC</label>
                                        <input type="text" name={fmt.Sprintf("interfaces[%d].dhcp.mac", i)} 
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">DHCP Hostname</label>
                                        <input type="text" name={fmt.Sprintf("interfaces[%d].dhcp.hostname", i)} 
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">DHCP IP</label>
                                        <input type="text" name={fmt.Sprintf("interfaces[%d].dhcp.ip", i)} 
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Disks Section -->
                <div class="border border-gray-200 rounded-lg p-4">
                    <h4 class="text-lg font-medium text-gray-900 mb-4">Disks</h4>
                    <div id="disks-container">
                        for i, disk := range hw.Spec.Disks {
                            <div class="border border-gray-100 rounded p-3 mb-3">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Disk {fmt.Sprintf("%d", i+1)} - Device</label>
                                        <input type="text" name={fmt.Sprintf("disks[%d].device", i)} 
                                            value={disk.Device}
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Resources Section -->
                <div class="border border-gray-200 rounded-lg p-4">
                    <h4 class="text-lg font-medium text-gray-900 mb-4">Resources</h4>
                    <div class="space-y-3">
                        for key, quantity := range hw.Spec.Resources {
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Resource Name</label>
                                    <input type="text" name="resourceKeys[]" value={key}
                                        class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700">Quantity</label>
                                    <input type="text" name="resourceValues[]" value={quantity.String()}
                                        class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- References Section -->
                <div class="border border-gray-200 rounded-lg p-4">
                    <h4 class="text-lg font-medium text-gray-900 mb-4">References</h4>
                    <div class="space-y-3">
                        for key, ref := range hw.Spec.References {
                            <div class="border border-gray-100 rounded p-3">
                                <h5 class="text-sm font-medium text-gray-800 mb-2">Reference: {key}</h5>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Reference Key</label>
                                        <input type="text" name="referenceKeys[]" value={key}
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Name</label>
                                        <input type="text" name="referenceNames[]" value={ref.Name}
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Namespace</label>
                                        <input type="text" name="referenceNamespaces[]" value={ref.Namespace}
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700">Resource</label>
                                        <input type="text" name="referenceResources[]" value={ref.Resource}
                                            class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <!-- Hardware Metadata Section -->
                <div class="border border-gray-200 rounded-lg p-4">
                    <h4 class="text-lg font-medium text-gray-900 mb-4">Hardware Metadata</h4>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="edit-manufacturer" class="block text-sm font-medium text-gray-700">Manufacturer</label>
                            <input type="text" name="manufacturer" id="edit-manufacturer" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="edit-instance-id" class="block text-sm font-medium text-gray-700">Instance ID</label>
                            <input type="text" name="instanceId" id="edit-instance-id" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="edit-facility-code" class="block text-sm font-medium text-gray-700">Facility Code</label>
                            <input type="text" name="facilityCode" id="edit-facility-code" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                        <div>
                            <label for="edit-plan-slug" class="block text-sm font-medium text-gray-700">Plan Slug</label>
                            <input type="text" name="planSlug" id="edit-plan-slug" 
                                class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
                        </div>
                    </div>
                </div>

                <!-- Submit Buttons -->
                <div class="flex justify-end space-x-3 pt-4 border-t">
                    <button type="button" onclick="document.getElementById('edit-modal').style.display='none'" 
                        class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">
                        Cancel
                    </button>
                    <button type="submit" 
                        class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700">
                        Update Hardware
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="delete-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-lg font-medium text-gray-900">Delete Hardware</h3>
                <button type="button" onclick="document.getElementById('delete-modal').style.display='none'" class="text-gray-400 hover:text-gray-600">
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                </button>
            </div>
            <div class="mb-4">
                <p class="text-sm text-gray-500">Are you sure you want to delete the hardware "{hw.Name}"? This action cannot be undone.</p>
            </div>
            <div class="flex justify-end space-x-3">
                <button type="button" onclick="document.getElementById('delete-modal').style.display='none'" class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-50">Cancel</button>
                <button 
                    type="button"
                    hx-delete={"/hardware/" + hw.Name}
                    hx-confirm="Are you sure?"
                    hx-target="body"
                    hx-swap="outerHTML"
                    class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700">
                    Delete
                </button>
            </div>
        </div>
    </div>
</body>
</html>
}
